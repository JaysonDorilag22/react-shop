#######################################################################################
                                    Terminal
#######################################################################################
1. cd /
2. mkdir react-shop
3. cd react-shop
4. code .

#######################################################################################
                                    VS CODE
#######################################################################################

1. create backend folder in [react-shop]
2. create frontend in [react-shop]
3. cd backend in <terminal>


#######################################################################################
                                4. install packages
#######################################################################################

npm init -y
npm i bcrypt cookie-parser crypto dotenv express jsonwebtoken mongoose validator
npm i nodemon --save-dev

in [package.json]
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon server.js"
  },
                    

#######################################################################################
                        5. create config folder in [backend]
                        6. create config.env in [backend/config]
                        (change DB_URI to your own mongodb link)
#######################################################################################

PORT = 4001
NODE_ENV = DEVELOPMENT
DB_URI = "mongodb+srv://emingala02:admin1234@cluster0.argacqg.mongodb.net/shop?retryWrites=true&w=majority"
JWT_SECRET = gWlkpvmeYqas79948OiH
JWT_EXPIRES_TIME = 7d
COOKIE_EXPIRES_TIME = 7


#######################################################################################
                        7. create database.js in [backend/config]
#######################################################################################

const mongoose = require('mongoose');

const connectDatabase = () => {
   
    mongoose.connect(process.env.DB_URI, {
        useNewUrlParser: true,
        useUnifiedTopology: true,
        
    }).then(con => {
        console.log(`MongoDB Database connected with HOST: ${con.connection.host}`)
    })
}

module.exports = connectDatabase


#######################################################################################
                        8. create data folder in [backend]
        9. create products.json in [backend/data] (check json file in repository)
#######################################################################################


#######################################################################################
                            10. create app.js in [backend]
#######################################################################################

const express = require('express');
const app = express();

const products = require('./routes/product');
app.use(express.json());
app.use('/api/v1',products);
module.exports = app;


#######################################################################################
                            11. create server.js in [backend]
#######################################################################################

const app = require('./app');
const connectDatabase = require('./config/database')

const dotenv = require('dotenv');
dotenv.config({path: './config/config.env'})

connectDatabase();

app.listen(process.env.PORT, () => {
	console.log(`server started on port:' ${process.env.PORT} in ${process.env.NODE_ENV} mode`);
});




#######################################################################################
12. create models folder in [backend]
13. create product.js in [backend/models] (check product.js)
13. create controllers folder in [backend]
14. create productController.js in [backend/controllers] (check productController.js in repository)
15. create routes folder in [backend]
16. create products.js in [backend/routes] (check product.js in repository)
#######################################################################################










cloudinary
create folders avatars and products


andami na sumunod di ko na nasundan